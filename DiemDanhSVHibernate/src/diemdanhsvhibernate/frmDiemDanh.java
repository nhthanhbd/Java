/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diemdanhsvhibernate;

import DAO.*;
import Entity.*;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ThanhNH
 */
public class frmDiemDanh extends javax.swing.JFrame {

    /**
     * Creates new form frmDiemDanh
     */
    String maND;
    String tenND;
    int maLoai;
    String mk;
    public frmDiemDanh(String maNguoiDung, String tenNguoiDung, int maLoaiNguoiDung,String matKhau) {
        initComponents();
        this.maND = maNguoiDung;
        this.tenND = tenNguoiDung;
        this.maLoai = maLoaiNguoiDung;
        this.mk = matKhau;
        loaddata();
        loadcbxSubject();
    }
    NguoiDungDAO ndDAO = new NguoiDungDAO();
    Nguoidung nd = new Nguoidung();
    SinhVienMonHocDAO svmhDAO = new SinhVienMonHocDAO();
    Sinhvienmonhoc svmh = new Sinhvienmonhoc();
    MonHocDAO mhDAO = new MonHocDAO();
    Monhoc mh = new Monhoc();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTenSV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbMonHoc = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        dateNgay = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        cmbGio = new javax.swing.JComboBox<>();
        cmbPhut = new javax.swing.JComboBox<>();
        btnDiemDanh = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 250, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Mã Sinh Viên");

        txtMaSV.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Tên Sinh Viên");

        txtTenSV.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Chọn môn học");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Chọn ngày");

        dateNgay.setDateFormatString("dd/MM/yyyy");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Chọn giờ");

        cmbGio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        cmbGio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbGioItemStateChanged(evt);
            }
        });

        cmbPhut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", " " }));

        btnDiemDanh.setBackground(new java.awt.Color(51, 51, 51));
        btnDiemDanh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnDiemDanh.setText("Điểm danh");
        btnDiemDanh.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnDiemDanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiemDanhActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(51, 51, 51));
        btnThoat.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("ĐIỂM DANH SINH VIÊN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDiemDanh, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cmbGio, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbPhut, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(dateNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(201, 201, 201))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMonHoc, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                            .addComponent(jLabel3))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dateNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbGio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPhut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(128, 128, 128))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnThoat, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                            .addComponent(btnDiemDanh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loaddata() {
        nd = ndDAO.getUserbyUsrName(maND);
        txtMaSV.setText(nd.getTenNguoiDung());
        txtTenSV.setText(nd.getHoTen());
    }

    private void loadcbxSubject() {
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        for (Sinhvienmonhoc svmh : svmhDAO.getSubjectbyStudentID(maND)) {
            dcm.addElement(svmh.getMonhoc().getMaMonHoc() + " - " + svmh.getMonhoc().getTenMonHoc());
        }
        cmbMonHoc.setModel(dcm);
    }
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        frmMain main = new frmMain(maND, tenND, maLoai,mk);
        main.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnDiemDanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiemDanhActionPerformed
        // TODO add your handling code here:
        if (dateNgay.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Chọn ngày để điểm danh !","Lỗi dữ liệu",JOptionPane.ERROR_MESSAGE);
        } else {
            String maMonHoc = cmbMonHoc.getSelectedItem().toString();
            String[] maMH = maMonHoc.split("\\s");
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            Calendar c = Calendar.getInstance();
            Calendar cbd = Calendar.getInstance();
            Calendar ckt = Calendar.getInstance();
            Calendar chbd = Calendar.getInstance();
            Calendar chkt = Calendar.getInstance();
            Calendar c1 = Calendar.getInstance();
            int gio = Integer.parseInt(cmbGio.getSelectedItem().toString());
            System.out.println(gio);
            int phut = Integer.parseInt(cmbPhut.getSelectedItem().toString());
            System.out.println(phut);
            String giobd = String.valueOf(gio) + ":" + String.valueOf(phut);
            System.out.println(giobd);
            Date cdStr = new Date();
            
            cdStr = dateNgay.getDate();
            String chDate = dateFormat.format(cdStr);
            try {
                Date cd = dateFormat.parse(chDate);
                c.setTime(cd);
                c.set(Calendar.HOUR_OF_DAY, gio);
                c.set(Calendar.MINUTE, phut);
            } catch (Exception e) {
                e.printStackTrace();
            }

            mh = mhDAO.getSubjectbyID(maMH[0]);
            String stDateStr = dateFormat.format(mh.getNgayBd());
            String stHour = dateFormat.format(cdStr);
            String fnHour = dateFormat.format(cdStr);
            String giobatdau = mh.getGioBd().toString();
            String gioketthuc = mh.getGioKt().toString();
            String[] a = giobatdau.split("\\:");
            String[] b = gioketthuc.split("\\:");
            int gbd = Integer.parseInt(a[0]);
            int pbd = Integer.parseInt(a[1]);
            int gkt = Integer.parseInt(b[0]);
            int pkt = Integer.parseInt(b[1]);
            System.out.println(gbd);
            System.out.println(gkt);
            System.out.println(pbd);
            System.out.println(pbd);
            try {
                Date std = dateFormat.parse(stDateStr);
                Date sth = dateFormat.parse(stHour);
                Date fnh = dateFormat.parse(fnHour);
                cbd.setTime(std);
                cbd.set(Calendar.HOUR_OF_DAY,gio);
                cbd.set(Calendar.MINUTE,phut);
                
                
                
                
                ckt.setTime(cbd.getTime());
                ckt.add(Calendar.DATE, 105);
                chbd.setTime(sth);
                chbd.set(Calendar.HOUR_OF_DAY, gbd);
                chbd.set(Calendar.MINUTE, pbd);
                chkt.setTime(fnh);
                chkt.set(Calendar.HOUR_OF_DAY, gkt);
                chkt.set(Calendar.MINUTE, pkt);
            } catch (Exception e) {
                e.printStackTrace();
            }
            System.out.println(c.getTime());
            System.out.println(cbd.getTime());
            System.out.println(ckt.getTime());
            if ((cbd.getTime().equals(c.getTime()) || c.getTime().after(cbd.getTime())) && (c.getTime().equals(ckt.getTime())
                    || c.getTime().before(ckt.getTime()))) {
                int day = cbd.get(Calendar.DAY_OF_MONTH);
                int month = cbd.get(Calendar.MONTH) + 1;
                int year = cbd.get(Calendar.YEAR);
                System.out.println(day);
                System.out.println(month);
                System.out.println(year);
                int thu = ((day + 2 * month + (3 * (month + 1)) / 5 + year + (year / 4)) % 7) + 1;
                
                
                int i;
                String thu1 = mh.getThuTrongTuan();
                System.out.println("Thu trong tuan la : " + thu1);
                if (thu1.equals("CN")) {
                    i = 1;
                } else {
                    i = Integer.parseInt(thu1);
                }
                   System.out.println("Thu cua ngay chon la : "+ thu);
                   c1.setTime(cbd.getTime());
                while(thu != i){
                    System.out.println(i);
                    System.out.println(thu);
                    if(thu == 7){
                        thu = 0;
                    }
                    
                    c1.add(Calendar.DATE,1);
                    System.out.println(c1.getTime());
                    thu++; }
                System.out.println("ngay moi" + c1.getTime());
                int dbd = c.get(Calendar.DAY_OF_MONTH);
                int mbd = c.get(Calendar.MONTH) + 1;
                int ybd = c.get(Calendar.YEAR);
                int thubd = ((dbd + 2 * mbd + (3 * (mbd + 1)) / 5 + ybd + (ybd / 4)) % 7) + 1;
                String thudata = mh.getThuTrongTuan().toString();
                System.out.println(thudata);
                int th;
                if(thudata.equals("CN"))
                {
                    System.out.println("true");
                    th = 1;
                }
                else
                {
                    th = Integer.parseInt(thudata);
                }
                if(thubd == th){                    
                    System.out.println(c.getTime());
                    System.out.println(chbd.getTime());
                    System.out.println(chkt.getTime());
                    if (c.getTime().before(chbd.getTime()) || c.getTime().after(chkt.getTime())) {
                        JOptionPane.showMessageDialog(null, "Giờ học không hợp lệ ! Vui lòng chọn đúng giờ học !","Lỗi dữ liệu",JOptionPane.ERROR_MESSAGE);
                    } else {
                        System.out.println("Ngay chon " + c.getTime());
                        System.out.println("ngay bat dau moi " + cbd.getTime());
                        System.out.println(chbd.getTime());
                        System.out.println(chkt.getTime());
                        System.out.println("Hop le!");
                        Date[] date1 = new Date[15];
                        for (int i1 = 0; i1 <= 14; i1++) {
                            date1[i1] = c1.getTime();
                            System.out.println(date1[i1]);
                            c1.add(Calendar.DATE, 7);
                            //System.out
                        }
                        Calendar ctemp1 = Calendar.getInstance();
                        int k = 0;
                        while (k < 15) {
                            System.out.println("Hello there");
                            System.out.println(k);
                            ctemp1.setTime(date1[k]);
                            ctemp1.set(Calendar.HOUR_OF_DAY, gio);
                            ctemp1.set(Calendar.MINUTE, phut);
                            System.out.println(c.getTime());
                            System.out.println(ctemp1.getTime());
                            if (c.getTime().equals(ctemp1.getTime())) {
                                String week;
                                System.out.println("Chao");
                                week = "tuan" + String.valueOf(k+1);
                                int message = JOptionPane.showConfirmDialog(null, "Bạn muốn điểm danh cho Tuần " + (k+1), "Xác nhận điểm danh", JOptionPane.YES_NO_OPTION
                                );
                                if (message == JOptionPane.YES_OPTION) {
                                    Calendar curDate = Calendar.getInstance();
                                  
                                    if(curDate.getTime().before(chbd.getTime()) || curDate.getTime().after(chkt.getTime())){
                                        JOptionPane.showMessageDialog(null, "Bạn đã quá thời gian điểm danh hoặc chưa tới thời điểm học ! ","Thông báo",JOptionPane.ERROR_MESSAGE);
                                    }
                                    else{
                                        
                                    String kt = svmhDAO.getweekbyStudentID(week, maND, maMH[0]);
                                    Boolean check = Boolean.parseBoolean(kt);
                                    
                                    if(check == true){
                                        JOptionPane.showMessageDialog(null, "Bạn đã điểm danh cho tuần " + (k+1) + " rồi !","Thông báo",JOptionPane.ERROR_MESSAGE);
                                    }
                                    else{
                                    svmhDAO.update(maND, week, true, maMH[0]);
                                   JOptionPane.showMessageDialog(null, "Điểm danh thành công !","Thông báo",JOptionPane.INFORMATION_MESSAGE);
                                    break;
                                    }}
                                    } else {
                                    JOptionPane.showMessageDialog(null, "Điểm danh thất bại !","Thông báo",JOptionPane.ERROR_MESSAGE);
                                    break;
                                }
                            }
                            k++;
                        }
                    }
                    
                    

                }else{
                    JOptionPane.showMessageDialog(null, "Chọn đúng thứ trong tuần để điểm danh !","Thông báo",JOptionPane.ERROR_MESSAGE);
                }
            }
             else {
                int day = c.get(Calendar.DAY_OF_MONTH);
                int month = c.get(Calendar.MONTH) + 1;
                int year = c.get(Calendar.YEAR);
                JOptionPane.showMessageDialog(null,"Chọn ngày điểm danh không hợp lệ . Ngày điểm danh phải sau ngày bắt đầu và trước ngày kết thúc !","Lỗi dữ liệu",JOptionPane.ERROR_MESSAGE);
            }


    }//GEN-LAST:event_btnDiemDanhActionPerformed
    }
    private void cmbGioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbGioItemStateChanged

    }//GEN-LAST:event_cmbGioItemStateChanged


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDiemDanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDiemDanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDiemDanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDiemDanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDiemDanh;
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox<String> cmbGio;
    private javax.swing.JComboBox<String> cmbMonHoc;
    private javax.swing.JComboBox<String> cmbPhut;
    private com.toedter.calendar.JDateChooser dateNgay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtTenSV;
    // End of variables declaration//GEN-END:variables
}
