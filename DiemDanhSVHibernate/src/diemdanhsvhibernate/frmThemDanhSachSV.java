/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diemdanhsvhibernate;

import DAO.*;
import Entity.*;
import java.util.*;
import javax.swing.*;
import java.io.*;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.MessageDigest;
import java.util.stream.Stream;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ThanhNH
 */
public class frmThemDanhSachSV extends javax.swing.JFrame {

    /**
     * Creates new form frmThemDanhSachSV
     */
    MonHocDAO mhDAO = new MonHocDAO();
    Monhoc mh = new Monhoc();
    NguoiDungDAO ndDAO = new NguoiDungDAO();
    Nguoidung nd = new Nguoidung();
    SinhVienMonHocDAO svmhDAO = new SinhVienMonHocDAO();
    Sinhvienmonhoc svmh = new Sinhvienmonhoc();
    SinhvienmonhocId svmhID = new SinhvienmonhocId();

    String maND;
    String tenND;
    int maLoai;
    String mk;

    public frmThemDanhSachSV() {
        initComponents();

    }

    public frmThemDanhSachSV(String maNguoiDung, String tenNguoiDung, int maLoaiNguoiDung, String matKhau) {
        initComponents();
        this.maND = maNguoiDung;
        this.tenND = tenNguoiDung;
        this.maLoai = maLoaiNguoiDung;
        this.mk = matKhau;
        loadcbxMonHoc();
        loadListStudents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSinhVien = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listSVMH = new javax.swing.JList<>();
        cmbMonHoc = new javax.swing.JComboBox<>();
        btnThemSV = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setForeground(new java.awt.Color(51, 0, 204));

        jScrollPane1.setViewportView(listSinhVien);

        listSVMH.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listSVMH);

        cmbMonHoc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmbMonHoc.setForeground(new java.awt.Color(0, 153, 153));
        cmbMonHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn môn học" }));
        cmbMonHoc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmbMonHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonHocItemStateChanged(evt);
            }
        });
        cmbMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbMonHocMouseClicked(evt);
            }
        });
        cmbMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonHocActionPerformed(evt);
            }
        });

        btnThemSV.setBackground(new java.awt.Color(51, 51, 51));
        btnThemSV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThemSV.setText(">>");
        btnThemSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSVActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Danh sách sinh viên");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Danh sách sinh viên môn học");

        btnThoat.setBackground(new java.awt.Color(51, 51, 51));
        btnThoat.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(51, 51, 51));
        btnThem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThem.setText("Thêm SV mới ");
        btnThem.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnImport.setBackground(new java.awt.Color(51, 51, 51));
        btnImport.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnImport.setText("Import CSV");
        btnImport.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnExport.setBackground(new java.awt.Color(51, 51, 51));
        btnExport.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnExport.setText("Get Template CSV");
        btnExport.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(150, 150));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/list1600.png"))); // NOI18N
        jLabel3.setMaximumSize(new java.awt.Dimension(150, 150));
        jLabel3.setMinimumSize(new java.awt.Dimension(150, 150));
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 150));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(84, 84, 84)
                                        .addComponent(jLabel2)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThemSV, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20)))
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(cmbMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(btnThemSV))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSVActionPerformed
        // TODO add your handling code here:
        if (listSinhVien.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Phải chọn sinh viên từ danh sách hoặc thêm sinh viên mới", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else {
            String maSinhVien = listSinhVien.getSelectedValue().toString();
            String maMonHoc = cmbMonHoc.getSelectedItem().toString();
            String[] maSV = maSinhVien.split("\\s");
            String[] maMH = maMonHoc.split("\\s");
            System.out.println(maSV[0] + " " + maMH[0]);
            svmh.setId(svmhID);
            svmhID.setMaMh(maMH[0]);
            svmhID.setMaSv(maSV[0]);
            if (svmhDAO.save(svmh)) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                loadListSubjectStudents();
            } else {
                JOptionPane.showMessageDialog(null, "Môn học đã có sinh viên này!");
            }

    }//GEN-LAST:event_btnThemSVActionPerformed
    }

    private void loadcbxMonHoc() {
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        cmbMonHoc.setSelectedItem("Chọn môn học");
        for (Monhoc mh : mhDAO.getAll()) {
            dcm.addElement(mh.getMaMonHoc() + " - " + mh.getTenMonHoc());
            //System.out.println(mh.getTenMonHoc());
        }
        cmbMonHoc.setModel(dcm);
    }

    private void loadListStudents() {
        DefaultListModel dlm = new DefaultListModel();
        for (Nguoidung nd : ndDAO.getSinhVien()) {

            dlm.addElement(nd.getTenNguoiDung() + " - " + nd.getHoTen());
        }
        listSinhVien.setModel(dlm);
    }

    private void loadListSubjectStudents() {
        String obj = cmbMonHoc.getSelectedItem().toString();
        String[] word = obj.split("\\s");
        DefaultListModel dlm1 = new DefaultListModel();
        //dlm1.clear();
        for (Sinhvienmonhoc svmh : svmhDAO.getUserbyMonHocID(word[0])) {
            dlm1.addElement(svmh.getNguoidung().getTenNguoiDung() + " - " + svmh.getNguoidung().getHoTen());
        }

        listSVMH.setModel(dlm1);

        if (dlm1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Môn học này chưa có sinh viên. Vui lòng thêm sinh viên vào môn học");

        }
    }

    public void exportCSVFile(String filename) {
        try {

            Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(filename), "UTF-8"));

            out.append("Nhập theo template bên dưới . Mỗi dòng có 2 cột MSSV và Họ Tên. MSSV gồm 7 số . Ví dụ").append("\n");
            out.append("MSSV" + ",");
            out.append("Họ tên").append("\n");
            out.append("1642066" + ",");
            out.append("Nguyễn Hữu Thạnh").append("\n");
            out.append("1062126" + ",");
            out.append("Thạnh Nguyễn Hữu");

            //pw.println("---------------------------------------");
            out.flush();
            out.close();
            JOptionPane.showMessageDialog(null, "Get template thành công !");

        } catch (UnsupportedEncodingException e) {
            System.out.println(e.getMessage());
        } catch (IOException e) {
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    public void importCSVFile(String filename) {
        try {
            Stream<String> lines = Files.lines(Paths.get(filename));
            lines.forEach((String t) -> {
                String[] parse = t.split(",");
                if (parse.length < 2) {
                    return;
                }
                System.out.println(parse[0]);
                System.out.println(parse[1]);
                nd.setTenNguoiDung(parse[0]);
                nd.setHoTen(parse[1]);
                nd.setMaLoaiNguoiDung(2);
                nd.setTenLoaiNguoiDung("Sinh viên");
                String newpass = parse[0];
                try {
                    MessageDigest md5_new = MessageDigest.getInstance("MD5");
                    md5_new.update(StandardCharsets.UTF_8.encode(newpass));
                    nd.setMatKhau(new BigInteger(1, md5_new.digest()).toString(16));
                    System.out.println(nd.getMatKhau());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                if (ndDAO.save(nd)) {
                    String maMonHoc = cmbMonHoc.getSelectedItem().toString();
                    String[] maMH = maMonHoc.split("\\s");
                    SinhvienmonhocId svmhID = new SinhvienmonhocId();
                    svmh.setId(svmhID);
                    svmhID.setMaSv(nd.getTenNguoiDung());
                    svmhID.setMaMh(maMH[0]);
                    if (svmhDAO.save(svmh)) {
                        JOptionPane.showMessageDialog(null, "Thêm sinh viên thành công !", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm sinh viên thất bại !", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    }
                }

            });
            JOptionPane.showMessageDialog(null, "Đọc file thành công. Đã thêm sinh viên vào danh sách", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            loadListSubjectStudents();
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Error Formatting ! MSSV,Họ tên ");
        } catch (UncheckedIOException e1) {
            JOptionPane.showMessageDialog(null, "File is not accepted ! Choose other file *.csv and correct format");
        } catch (IOException e2) {
            e2.printStackTrace();
        }
    }
    private void cmbMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonHocActionPerformed
        // TODO add your handling code here:
        cmbMonHoc.setSelectedItem("Chọn môn học");


    }//GEN-LAST:event_cmbMonHocActionPerformed

    private void cmbMonHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonHocItemStateChanged
        // TODO add your handling code here:

        loadListSubjectStudents();
    }//GEN-LAST:event_cmbMonHocItemStateChanged

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        frmMain main = new frmMain(maND, tenND, maLoai, mk);
        this.setVisible(false);
        main.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void cmbMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbMonHocMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbMonHocMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        frmThemSV themsv = new frmThemSV(maND, tenND, maLoai, mk);
        this.setVisible(false);
        themsv.setVisible(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "CSV File", "csv");
        jfc.setFileFilter(filter);
        String filename = null;
        String dir = null;
        int iVal = jfc.showOpenDialog(null);
        if (iVal == JFileChooser.APPROVE_OPTION) {
            //jfc.addChoosableFileFilter(new FileNameExtensionFilter("*.csv", "csv"));
            filename = jfc.getSelectedFile().getName();
            dir = jfc.getCurrentDirectory().toString();
            String filePath = dir + "\\" + filename;
            importCSVFile(filePath);
        } else {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn file để đọc !");
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here
        JFileChooser jfc1 = new JFileChooser();
        FileNameExtensionFilter filter1 = new FileNameExtensionFilter(
                "CSV File", "csv");
        jfc1.setFileFilter(filter1);
        String filename1 = null;
        String dir1 = null;
        int iVal1 = jfc1.showSaveDialog(null);
        if (iVal1 == JFileChooser.APPROVE_OPTION) {
            //jfc1.addChoosableFileFilter(new FileNameExtensionFilter("*.csv", "csv"));
            filename1 = jfc1.getSelectedFile().getName();
            dir1 = jfc1.getCurrentDirectory().toString();
            String filePath1 = dir1 + "\\" + filename1;
            exportCSVFile(filePath1);
        } else {
            JOptionPane.showMessageDialog(null, "Bạn chưa lưu template !");
        }
    }//GEN-LAST:event_btnExportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmThemDanhSachSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmThemDanhSachSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmThemDanhSachSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmThemDanhSachSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmThemDanhSachSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemSV;
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox<String> cmbMonHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listSVMH;
    private javax.swing.JList<String> listSinhVien;
    // End of variables declaration//GEN-END:variables
}
