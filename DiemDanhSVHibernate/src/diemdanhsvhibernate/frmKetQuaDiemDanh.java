/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diemdanhsvhibernate;

import Entity.Monhoc;
import javax.swing.DefaultComboBoxModel;
import DAO.*;
import Entity.Sinhvienmonhoc;
import java.awt.event.MouseEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ThanhNH
 */
public class frmKetQuaDiemDanh extends javax.swing.JFrame {

    /**
     * Creates new form frmKetQuaDiemDanh
     */
    public frmKetQuaDiemDanh() {
        initComponents();
        loadcbxMonHoc();
        loadListSubjectStudents();
        updateListStudents();
    }
    String maND;
    int maLoaiNguoiDung;
    String tenND;
    String mk;

    public frmKetQuaDiemDanh(String maNguoiDung, String tenNguoiDung, int maLoaiND,String matKhau) {
        initComponents();
        this.maND = maNguoiDung;
        this.tenND = tenNguoiDung;
        this.maLoaiNguoiDung = maLoaiND;
        this.mk = matKhau;
        loadcbxMonHoc();
        loadListSubjectStudents();
        updateListStudents();
    }
    MonHocDAO mhDAO = new MonHocDAO();
    SinhVienMonHocDAO svmhDAO = new SinhVienMonHocDAO();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbMonHoc = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnThoat = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDiemDanh = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KẾT QUẢ ĐIỂM DANH");

        jPanel2.setBackground(new java.awt.Color(204, 250, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Chọn môn học");

        cmbMonHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMonHocItemStateChanged(evt);
            }
        });
        cmbMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonHocActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("KẾT QUẢ ĐIỂM DANH");

        btnThoat.setBackground(new java.awt.Color(51, 51, 51));
        btnThoat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Kết quả điểm danh", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 0, 51))); // NOI18N

        tblDiemDanh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sinh Viên", "Tên Sinh Viên", "Tuần 1", "Tuần 2", "Tuần 3", "Tuần 4", "Tuần 5", "Tuần 6", "Tuần 7", "Tuần 8", "Tuần 9", "Tuần 10", "Tuần 11", "Tuần 12", "Tuần 13", "Tuần 14", "Tuần 15"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDiemDanh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDiemDanhMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDiemDanh);
        if (tblDiemDanh.getColumnModel().getColumnCount() > 0) {
            tblDiemDanh.getColumnModel().getColumn(2).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(3).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(4).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(5).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(6).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(7).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(8).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(9).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(10).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(11).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(12).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(13).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(14).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(15).setResizable(false);
            tblDiemDanh.getColumnModel().getColumn(16).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1027, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(389, 389, 389)
                .addComponent(jLabel2)
                .addContainerGap(400, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(383, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(97, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        frmMain main = new frmMain(maND, tenND, maLoaiNguoiDung,mk);
        main.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void tblDiemDanhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiemDanhMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblDiemDanhMouseClicked

    private void cmbMonHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMonHocItemStateChanged
        // TODO add your handling code here:
        loadListSubjectStudents();
    }//GEN-LAST:event_cmbMonHocItemStateChanged

    private void cmbMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonHocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonHocActionPerformed

    private void loadcbxMonHoc() {

        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        if (maLoaiNguoiDung == 1) {
            for (Monhoc mh : mhDAO.getAll()) {
                dcm.addElement(mh.getMaMonHoc() + " - " + mh.getTenMonHoc());
            }
            cmbMonHoc.setModel(dcm);
        } else {
            for (Sinhvienmonhoc svmh : svmhDAO.getSubjectbyStudentID(maND)) {
                dcm.addElement(svmh.getMonhoc().getMaMonHoc() + " - " + svmh.getMonhoc().getTenMonHoc());
            }
            cmbMonHoc.setModel(dcm);

        }
    }

    private void loadListSubjectStudents() {
        if (maLoaiNguoiDung == 1) {

            String obj = cmbMonHoc.getSelectedItem().toString();
            String[] word = obj.split("\\s");
            DefaultTableModel dtm = new DefaultTableModel() {
                public Class<?> getColumnClass(int column) {
                    switch (column) {
                        case 0:
                            return String.class;
                        case 1:
                            return String.class;
                        case 2:
                            return Boolean.class;
                        case 3:
                            return Boolean.class;
                        case 4:
                            return Boolean.class;
                        case 5:
                            return Boolean.class;
                        case 6:
                            return Boolean.class;
                        case 7:
                            return Boolean.class;
                        case 8:
                            return Boolean.class;
                        case 9:
                            return Boolean.class;
                        case 10:
                            return Boolean.class;
                        case 11:
                            return Boolean.class;
                        case 12:
                            return Boolean.class;
                        case 13:
                            return Boolean.class;
                        case 14:
                            return Boolean.class;
                        default:
                            return Boolean.class;
                    }
                }

                public boolean isCellEditable(int row, int column) {
                    // make read only fields except column 
                    return column == 2 || column == 3 || column == 4 || column == 5 || column == 6 || column == 7
                            || column == 8 || column == 9 || column == 10 || column == 11 || column == 12 || column == 13
                            || column == 14 || column == 15 || column == 16;
                }

            };
            tblDiemDanh.setModel(dtm);
            dtm.addColumn("Mã Sinh Viên");
            dtm.addColumn("Tên Sinh viên");
            dtm.addColumn("Tuần 1");
            dtm.addColumn("Tuần 2");
            dtm.addColumn("Tuần 3");
            dtm.addColumn("Tuần 4");
            dtm.addColumn("Tuần 5");
            dtm.addColumn("Tuần 6");
            dtm.addColumn("Tuần 7");
            dtm.addColumn("Tuần 8");
            dtm.addColumn("Tuần 9");
            dtm.addColumn("Tuần 10");
            dtm.addColumn("Tuần 11");
            dtm.addColumn("Tuần 12");
            dtm.addColumn("Tuần 13");
            dtm.addColumn("Tuần 14");
            dtm.addColumn("Tuần 15");
            /*for (Sinhvienmonhoc svmh : svmhDAO.getUserbyMonHocID(word[0])) {
            dtm.addRow(new Object[]{
            svmh.getNguoidung().getTenNguoiDung(),
            svmh.getNguoidung().getHoTen(),
            svmh.getTuan1(),
            svmh.getTuan2(),
            svmh.getTuan3(),
            svmh.getTuan4(),
            svmh.getTuan5(),
            svmh.getTuan6(),
            svmh.getTuan7(),
            svmh.getTuan8(),
            svmh.getTuan9(),
            svmh.getTuan10(),
            svmh.getTuan11(),
            svmh.getTuan12(),
            svmh.getTuan13(),
            svmh.getTuan14(),
            svmh.getTuan15(),
        });
        
        }*/

            for (Sinhvienmonhoc svmh : svmhDAO.getUserbyMonHocID(word[0])) {
                Object obj1[] = new Object[17];
                obj1[0] = svmh.getNguoidung().getTenNguoiDung();
                obj1[1] = svmh.getNguoidung().getHoTen();
                obj1[2] = svmh.getTuan1();
                obj1[3] = svmh.getTuan2();
                obj1[4] = svmh.getTuan3();
                obj1[5] = svmh.getTuan4();
                obj1[6] = svmh.getTuan5();
                obj1[7] = svmh.getTuan6();
                obj1[8] = svmh.getTuan7();
                obj1[9] = svmh.getTuan8();
                obj1[10] = svmh.getTuan9();
                obj1[11] = svmh.getTuan10();
                obj1[12] = svmh.getTuan11();
                obj1[13] = svmh.getTuan12();
                obj1[14] = svmh.getTuan13();
                obj1[15] = svmh.getTuan14();
                obj1[16] = svmh.getTuan15();

                dtm.addRow(obj1);
                tblDiemDanh.getTableHeader().setReorderingAllowed(false);
            }
        } else {
            String obj = cmbMonHoc.getSelectedItem().toString();
            String[] word = obj.split("\\s");
            DefaultTableModel dtm = new DefaultTableModel() {
                public Class<?> getColumnClass(int column) {
                    switch (column) {
                        case 0:
                            return String.class;
                        case 1:
                            return String.class;
                        case 2:
                            return Boolean.class;
                        case 3:
                            return Boolean.class;
                        case 4:
                            return Boolean.class;
                        case 5:
                            return Boolean.class;
                        case 6:
                            return Boolean.class;
                        case 7:
                            return Boolean.class;
                        case 8:
                            return Boolean.class;
                        case 9:
                            return Boolean.class;
                        case 10:
                            return Boolean.class;
                        case 11:
                            return Boolean.class;
                        case 12:
                            return Boolean.class;
                        case 13:
                            return Boolean.class;
                        case 14:
                            return Boolean.class;
                        default:
                            return Boolean.class;
                    }
                }

            };
            tblDiemDanh.setModel(dtm);
            dtm.addColumn("Mã Sinh Viên");
            dtm.addColumn("Tên Sinh viên");
            dtm.addColumn("Tuần 1");
            dtm.addColumn("Tuần 2");
            dtm.addColumn("Tuần 3");
            dtm.addColumn("Tuần 4");
            dtm.addColumn("Tuần 5");
            dtm.addColumn("Tuần 6");
            dtm.addColumn("Tuần 7");
            dtm.addColumn("Tuần 8");
            dtm.addColumn("Tuần 9");
            dtm.addColumn("Tuần 10");
            dtm.addColumn("Tuần 11");
            dtm.addColumn("Tuần 12");
            dtm.addColumn("Tuần 13");
            dtm.addColumn("Tuần 14");
            dtm.addColumn("Tuần 15");
            /*for (Sinhvienmonhoc svmh : svmhDAO.getUserbyMonHocID(word[0])) {
            dtm.addRow(new Object[]{
            svmh.getNguoidung().getTenNguoiDung(),
            svmh.getNguoidung().getHoTen(),
            svmh.getTuan1(),
            svmh.getTuan2(),
            svmh.getTuan3(),
            svmh.getTuan4(),
            svmh.getTuan5(),
            svmh.getTuan6(),
            svmh.getTuan7(),
            svmh.getTuan8(),
            svmh.getTuan9(),
            svmh.getTuan10(),
            svmh.getTuan11(),
            svmh.getTuan12(),
            svmh.getTuan13(),
            svmh.getTuan14(),
            svmh.getTuan15(),
        });
        
        }*/

            for (Sinhvienmonhoc svmh : svmhDAO.getUserbyListMonHocID(word[0], maND)) {
                Object obj1[] = new Object[17];
                obj1[0] = svmh.getNguoidung().getTenNguoiDung();
                obj1[1] = svmh.getNguoidung().getHoTen();
                obj1[2] = svmh.getTuan1();
                obj1[3] = svmh.getTuan2();
                obj1[4] = svmh.getTuan3();
                obj1[5] = svmh.getTuan4();
                obj1[6] = svmh.getTuan5();
                obj1[7] = svmh.getTuan6();
                obj1[8] = svmh.getTuan7();
                obj1[9] = svmh.getTuan8();
                obj1[10] = svmh.getTuan9();
                obj1[11] = svmh.getTuan10();
                obj1[12] = svmh.getTuan11();
                obj1[13] = svmh.getTuan12();
                obj1[14] = svmh.getTuan13();
                obj1[15] = svmh.getTuan14();
                obj1[16] = svmh.getTuan15();

                dtm.addRow(obj1);
                tblDiemDanh.getTableHeader().setReorderingAllowed(false);
                tblDiemDanh.setEnabled(false);
            }

        }

    }

    private void updateListStudents() {
        if (maLoaiNguoiDung == 1) {
            tblDiemDanh.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    int row = tblDiemDanh.rowAtPoint(e.getPoint());
                    int col = tblDiemDanh.columnAtPoint(e.getPoint());

                    if (row >= 0 && col >= 2) {
                        int t = col - 1;
                        String tuan = "Tuan" + Integer.toString(t);

                        boolean diemdanh = ((Boolean) tblDiemDanh.getValueAt(row, col));
                        String maSv = ((String) tblDiemDanh.getValueAt(row, 0));
                        String maMonHoc = cmbMonHoc.getSelectedItem().toString();
                        String[] maMH = maMonHoc.split("\\s");
                        int dialogResult = JOptionPane.showConfirmDialog(
                                null,
                                "Bạn muốn cập nhật kết quả điểm danh?",
                                "Cập nhật",
                                JOptionPane.YES_NO_OPTION);
                        if (dialogResult == JOptionPane.YES_OPTION) {
                            boolean updateDD = svmhDAO.update(maSv, tuan, diemdanh, maMH[0]);
                            if (updateDD) {
                                loadListSubjectStudents();
                                JOptionPane.showMessageDialog(null,
                                        "Cập nhật thành công", "Successful",
                                        JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(null,
                                        "Cập nhật thất bại", "Error",
                                        JOptionPane.ERROR_MESSAGE);

                            }

                        } else {
                            loadListSubjectStudents();
                        }

                    }

                }
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmKetQuaDiemDanh.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmKetQuaDiemDanh.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmKetQuaDiemDanh.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmKetQuaDiemDanh.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmKetQuaDiemDanh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JComboBox<String> cmbMonHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDiemDanh;
    // End of variables declaration//GEN-END:variables
}
